{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/piece/piece.js","webpack:///./src/scripts/piece/stepable.js","webpack:///./src/scripts/piece/king.js","webpack:///./src/scripts/piece/knight.js","webpack:///./src/scripts/piece/slideable.js","webpack:///./src/scripts/piece/Queen.js","webpack:///./src/scripts/piece/rook.js","webpack:///./src/scripts/piece/bishop.js","webpack:///./src/scripts/piece/nullpiece.js","webpack:///./src/scripts/piece/pawn.js","webpack:///./src/scripts/board.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Piece","color","board","position","this","status","movePosition","pos","end_pos","allMoves","moves","possibleMoves","length","potentialMoves","newPosition","isValidPosition","rows","push","King","moveDirections","Knight","AxialDirections","DiagonalDirections","directionalArray","combine","growingMoves","dx","dy","oneDirectionalMoves","takingPiece","currentPosition","arr1","arr2","freeze","Queen","concat","Rook","Bishop","symbol","NullPiece","Pawn","direction","atStart","forwardDirections","forwardSteps","sideSteps","diagonalMoves","front","forward","oneStep","twoStep","steps","isEmpty","oppositeColor","left","right","coord","isOnBoard","Board","currentPlayer","j","populateBoard","movePiece","findKing","check","checkmate","includesPosition","changeCurrentPlayer","promotion","chessPiece","backRow","index","startPos","endPos","piece","oppColor","temp","inputColor","king","kingPosition","k","x","y","newPiece","oldPiece","areEqualArrays","count","document","addEventListener","updateBoard","getElementsByClassName","board2","clickCount","innerHTML","isCheck","turn","chessBoard","valid","textContent","toUpperCase","slice","img","createElement","className","id","src","appendChild","onclick","e","preventDefault","currentPiece"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","class Piece {\n    constructor(color, board, position){\n        this.color =color;\n        this.board = board;\n        this.position = position;\n        this.status = false;\n\n        this.movePosition = this.movePosition.bind(this);\n    }\n\n    movePosition(pos){\n        this.position = [pos[0], pos[1]];\n    }\n\n    validMoves(){\n        //takes out moves  if it moves into check\n    }\n\n    isMovedIntoCheck(end_pos){\n        //boolean if piece is in  check if in end position\n    }\n}\n\nexport default Piece;","import Board from \"../board\";\n\nexport function allMoves(moves, position, board){\n    const possibleMoves = [];\n    for(let i = 0; i < moves.length; i++){\n        let potentialMoves = moves[i];\n        let newPosition = [position[0] + potentialMoves[0], position[1] + potentialMoves[1] ]\n        if (board.isValidPosition(newPosition, board.rows[position[0]][position[1]].color)){\n            possibleMoves.push(newPosition)\n        }\n    }\n    return possibleMoves\n}","import Piece from './piece';\nimport { allMoves } from './stepable';\n\nclass King extends Piece{\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = true;\n        this.moveDirections = this.moveDirections.bind(this);\n    }\n    symbol() {\n        // return \"KING\";\n        // return `../assets/k${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/kw.svg` : `./assets/kb.svg`);\n    }\n\n    moveDirections() {\n        const moves = [[1,0], [1, 1], [0, 1], [-1, 1],\n                         [-1, 0], [-1, -1], [0, -1], [1, -1]];\n        return allMoves(moves, this.position, this.board);\n    }\n}\n\nexport default King;","import Piece from './piece';\nimport { allMoves } from './stepable';\n\nclass Knight extends Piece {\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = false;\n        this.moveDirections = this.moveDirections.bind(this);\n    }\n    symbol() {\n        // return \"KNIGHT\";\n        // return `../assets/n${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/nw.svg` : `./assets/nb.svg`);\n    }\n\n    moveDirections() {\n        const moves = [ [1, 2], [2, 1], [1, -2], [2, -1],\n                        [-1, 2], [-2, 1], [-1, -2], [-2, -1] ]\n        return allMoves(moves, this.position, this.board)\n    }\n}\n\nexport default Knight;","// let EXPORTED_VARIABLES = [\"AxialDirections\", \"DiagonalDirections\", \"moves\", \"growingMoves\"];\n\nexport const AxialDirections = [[1, 0], [0, 1], [-1, 0], [0, -1]];\nexport const DiagonalDirections = [[1, 1], [1, -1], [-1, -1], [-1, 1]];\nObject.freeze(AxialDirections);\nObject.freeze(DiagonalDirections);\n\nexport function moves(directionalArray, position, board){\n    let allMoves = [];\n    // debugger;\n    // console.log(\"moves2\");\n    // console.log(allMoves);\n    // console.log(position);\n    // console.log(board);\n    for(let  i = 0; i < directionalArray.length; i++){\n        // debugger;\n        // console.log(\"Axial Direction: \", directionalArray[i]);\n        allMoves = combine(allMoves, growingMoves(directionalArray[i][0], directionalArray[i][1], position, board)); \n        // console.log(\"newMoves\");\n        // console.log(allMoves);\n    }\n    return allMoves;\n}\n\nexport function growingMoves(dx, dy, position, board){\n    const oneDirectionalMoves = [];\n    // console.log(\"Grow\");\n    // console.log(this.position);\n    let takingPiece = false;\n    let currentPosition = position;\n    // console.log(board);\n    currentPosition =  [currentPosition[0] + dx, currentPosition[1] + dy];\n    // let count = 0;\n    // debugger;\n    while( board.isValidPosition(currentPosition, board.rows[position[0]][position[1]].color)){\n    // while (false){\n        // console.log(count += 1);\n        // debugger;\n        if (board.rows[currentPosition[0]][currentPosition[1]].color === \"white\" || board.rows[currentPosition[0]][currentPosition[1]].color === \"black\") {\n            takingPiece = true;\n        }\n        oneDirectionalMoves.push(currentPosition);\n        currentPosition = [currentPosition[0] + dx, currentPosition[1] + dy];\n        if (takingPiece) {\n            break;\n        }\n        // debugger;\n       \n    }\n    return oneDirectionalMoves\n}\n\nfunction combine(arr1, arr2){\n    for(let  i = 0; i < arr2.length; i++){\n        arr1.push(arr2[i]);\n    }\n    return arr1;\n}\n// export default Slideable;\n\n// import Board from \"../board\";\n// import Piece from './piece';\n\n// class Slideable extends Board{\n//     //Axial Directions: Directions of the axis (x- and y-) \n//     constructor(){\n//         // super();\n\n//         const AxialDirections = [[1,  0], [0, 1], [-1,  0], [0, -1]];\n//         const DiagonalDirections = [[1, 1], [1, -1], [-1, -1], [-1, 1]];\n//         Object.freeze(AxialDirections);\n//         Object.freeze(DiagonalDirections);\n//     }\n\n\n//     growingMoves(dx, dy){\n//         const oneDirectionalMoves = [];\n//         let currentPosition = this.position;\n//         currentPosition =  [currentPosition[0] + dx, currentPosition[1] + dy];\n//         while(super.validPosition(currentPosition)){\n        \n//             return oneDirectionalMoves\n//         }\n//     }\n// }\n","import Piece from './piece';\nimport { AxialDirections, DiagonalDirections, moves } from './slideable';\n\nclass Queen extends Piece {\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = false;\n\n        this.moveDirections = this.moveDirections.bind(this);\n\n    }\n    symbol() {\n        // return `../assets/q${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/qw.svg` : `./assets/qb.svg`);\n    }\n\n    moveDirections() {\n        // console.log(\"Axial + Diagonal\", AxialDirections.concat(DiagonalDirections)[0] );\n        return moves(AxialDirections.concat(DiagonalDirections), this.position, this.board)\n    }  \n}\n\nexport default Queen;","import Piece from './piece';\nimport { AxialDirections, moves } from './slideable';\n\nclass Rook extends Piece {\n    constructor(color, board, position){\n        super(color, board, position);\n        this.status = true;\n\n    }\n    symbol() {\n        return (this.color === 'white' ? `./assets/rw.svg` : `./assets/rb.svg`);\n    }\n\n    moveDirections(){\n        return moves(AxialDirections, this.position, this.board)\n    }\n}\n\nexport default Rook;","import Piece from './piece';\nimport { DiagonalDirections, moves } from './slideable';\n// let piece = NodeRequire './piece';\n\nclass Bishop extends Piece{\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = false;\n        this.symbol = this.symbol.bind(this);\n        this.moveDirections= this.moveDirections.bind(this);\n        this.moves = moves.bind(this);\n        // this.DiagonalDirections = DiagonalDirections.bind(this);\n\n    }\n    symbol() {\n        // return \"BISHOP\";\n        // return `../assets/b${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/bw.svg` : `./assets/bb.svg`);\n\n    }\n\n    moveDirections() {\n        return moves(DiagonalDirections, this.position, this.board)\n    }\n}\n\nexport default Bishop;","import Piece from './piece';\n\nclass NullPiece extends Piece  {\n    constructor(color, board, position){\n        super(color, board, position);\n        // this.board = board;\n        // this.position = position;\n        // this.color = \"none\";\n        // this.symbol = \"null\";\n        this.moves  = [];\n    }\n    symbol() {\n        return `./assets/empty.png`;\n    }\n    moveDirections(){\n        return []\n    }\n};\n\n//Singleton: https://www.sitepoint.com/javascript-design-patterns-singleton/\nObject.freeze(NullPiece);\nexport default NullPiece;","import Piece from './piece';\n\nclass Pawn extends Piece {\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = false;\n\n        this.moveDirections = this.moveDirections.bind(this);\n        this.direction = this.direction.bind(this);\n        this.atStart  = this.atStart.bind(this);\n        this.allMoves = this.allMoves.bind(this);\n\n        this.forwardDirections = this.forwardDirections.bind(this);\n        this.forwardSteps = this.forwardSteps.bind(this);\n        this.sideSteps = this.sideSteps.bind(this);\n    }\n    symbol() {\n        // return \"PAWN\";\n        // return `../assets/p${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/pw.svg` : `./assets/pb.svg`);\n\n    }\n\n    moveDirections() {\n        // console.log(\"movedPawn\");\n        // console.log(this.forwardDirections())\n        // let mainMove = this.forwardDirections();\n\n        // Consists of forward moves\n            //Two Step Forward Moves\n        let allMoves = [];\n        if (this.forwardDirections().length > 0) {\n            // debugger;\n            allMoves.push(this.forwardDirections());\n            if (allMoves.length > 0 && this.atStart()) {\n                allMoves.push([this.direction() + this.forwardDirections()[0], this.forwardDirections()[1]])\n            }\n        }\n        //  Diagonal Moves.\n        let diagonalMoves = this.sideSteps();\n        for(let i = 0; i < diagonalMoves.length; i++){\n            allMoves.push(diagonalMoves[i]);\n        }\n        return allMoves;\n        // if (this.atStart()){\n        //     return [mainMove, [this.direction() + mainMove[0], mainMove[1]]]\n        // }\n        // else{\n        //     return [mainMove]\n        // }\n    }\n\n    direction() {\n        return this.color === 'white' ? -1 : 1;\n    }\n\n    atStart(){\n        return ( this.color === 'white' ? 6 : 1 ) ===  this.position[0]\n    }\n\n    allMoves(){\n        //Consists of diagonal Killing  Moves\n        //Passant\n    }\n\n    // Consists of 0-1 Steps Forward\n    forwardDirections(){\n        let front = this.direction()  + this.position[0];\n        let forward =  [];\n        if (front  >= 0 && front  < 8){\n            forward = [this.direction() + this.position[0], this.position[1]];\n        }\n        else {\n            return [];\n        }\n        if (this.board.rows[forward[0]][forward[1]].color === 'null'){\n            return forward;\n        }\n        else {\n            return [];\n        }\n    }\n\n    forwardSteps(){\n        let oneStep = [this.position[0], this.position[1] + this.forwardDirections()];\n        let twoStep = [this.position[0] + 2 * this.forwardDirections(), this.position[1]];\n        let steps = [];\n        //old isOnBoard\n        if(this.board.isEmpty(oneStep) && this.board.isEmpty(oneStep)){\n            steps.push(oneStep)\n            if(this.board.isEmpty(twoStep) && this.board.isEmpty(twoStep) && this.atStart()){\n                steps.push(twoStep)\n            }\n        }\n        return steps\n    }\n\n\n    sideSteps(){\n        let oppositeColor = (this.color === 'white' ?  'black'  : 'white');\n        let forward = [this.direction() + this.position[0], this.position[1]];\n        let steps = [];\n        let moves = [];\n        let left = forward[1] - 1;\n        let right = forward[1] + 1;\n        if (left >= 0 && left < 8){\n            moves.push([forward[0], left]);\n        }\n        if (right >= 0 && right < 8){\n            moves.push([forward[0], right]);\n        }\n        // let  moves =  [, [forward[0] , forward[1] - 1]];\n        // debugger\n        for(let i = 0; i < moves.length; i++){\n            let coord = moves[i];\n            //old is onBoard\n            if (this.board.isOnBoard(coord)) {\n                if (this.board.rows[coord[0]][coord[1]].color === oppositeColor){\n                    steps.push(coord)\n                }\n            }\n        }\n        return steps\n    }\n\n}\n\nexport default Pawn;","// import Piece from './piece/piece';\n\nimport King from './piece/king';\nimport Knight from './piece/knight';\n\nimport Queen from './piece/Queen';\nimport Rook from './piece/rook';\nimport Bishop from './piece/bishop';\n\nimport NullPiece from './piece/nullpiece';\nimport Pawn from './piece/pawn';\nimport Piece from './piece/piece';\n\nimport Display from './display';\n\nclass Board {\n    constructor(){\n        this.rows = [];\n        this.currentPlayer = \"white\";\n        // this.noPiece = new NullPiece(\"null\", this); \n        for (let i = 0; i < 8; i++){\n            this.rows[i] = [];\n            for (let j = 0;  j  < 8; j++){\n                this.rows[i][j] = new NullPiece(\"null\", this, [i, j]); \n            }\n        }\n        // Might need to bind \"this\"\n\n        this.populateBoard = this.populateBoard.bind(this);\n        this.isEmpty = this.isEmpty.bind(this);\n        this.movePiece  = this.movePiece.bind(this);\n        this.findKing = this.findKing.bind(this);\n        this.check = this.check.bind(this);\n        this.checkmate = this.checkmate.bind(this);\n        this.isValidPosition =this.isValidPosition.bind(this);\n        this.position = this.position.bind(this);\n        this.includesPosition = this.includesPosition.bind(this);\n        this.changeCurrentPlayer = this.changeCurrentPlayer.bind(this);\n        this.promotion = this.promotion.bind(this);\n        // this.invalidFirstPiece = this.invalidFirstPiece.bind(this);\n        this.populateBoard();\n    }\n\n    populateBoard(){\n        const color =  [\"black\", \"white\"];\n        for(let  i  = 0; i < this.rows.length; i++){\n            for(let j = 0; j < this.rows[i].length; j++){\n                let position  = [i, j];\n                if (i  === 0 || i === 7){\n                    // this.rows [position[0]][position[1]] = new (this.backRow(j))(color[i % 2], this, position);\n                    const chessPiece = this.backRow(j);\n                    this.rows[position[0]][position[1]] = new chessPiece(color[i % 2], this, position);\n\n                }\n                else if (i === 1 || i === 6){\n                    this.rows[position[0]][position[1]] = new Pawn(color[(i + 1) % 2], this, position);\n                }\n            }\n        }\n    }\n\n    backRow(index){\n        const backPieces= [Rook, Knight, Bishop, Queen, King, Bishop, Knight, Rook];\n        return backPieces[index]\n    }\n\n    isEmpty(pos) {\n        // old isValidPosition\n        return this.isOnBoard() && this.rows[pos[0]][pos[1]].color ===  'null'\n    }\n\n    movePiece(startPos, endPos = []){\n        // console.log(\"movePiece\");\n        // console.log(turnColor);\n        // console.log(startPos);\n        // console.log(endPos);\n        let piece = this.rows[startPos[0]][startPos[1]];\n        // let finalPiece = this.rows[endPos];\n        // console.log(this);\n        // console.log(this.rows[startPos[0]][s tartPos[1]]);\n        // console.log(this.rows[endPos[0]][endPos[1]]);\n        // console.log(piece);\n        // console.log(piece.color);\n        // console.log(this.currentPlayer);\n        // console.log(piece.moveDirections());\n        // console.log(endPos);\n        // console.log(this.includesPosition(piece.moveDirections, endPos));\n        // console.log(piece instanceof King);\n        let oppColor = (this.currentPlayer == \"white\" ? \"black\" : \"white\")\n        if (piece.color === this.currentPlayer && (this.includesPosition(piece.moveDirections(), endPos))){\n            // console.log(\"HELOOOOOO\");\n            let temp = this.rows[endPos[0]][endPos[1]]\n            this.rows[endPos[0]][endPos[1]] = piece;\n            this.rows[startPos[0]][startPos[1]] = new NullPiece(\"null\", this, startPos); \n            // this.piece.movePosition(endPos);\n            this.rows[endPos[0]][endPos[1]].movePosition(endPos);\n            // if (piece instanceof King){debugger;}\n            // debugger\n            // console.log('startPos', this.rows[startPos[0]][startPos[1]].position);\n            // console.log('endPos', this.rows[endPos[0]][endPos[1]].position);\n            if (this.check(this.currentPlayer)){\n                debugger\n                this.rows[startPos[0]][startPos[1]] =  piece\n                this.rows[startPos[0]][startPos[1]].movePosition(startPos);\n                this.rows[endPos[0]][endPos[1]] = temp\n                this.changeCurrentPlayer();\n            }\n            // debugger\n            if (this.checkmate(oppColor)){\n                // console.log(oppColor + \" is in  checkmate.\")\n            }\n            else if (this.check(oppColor)){\n                // console.log(oppColor, \"is in check\")\n            }\n            this.changeCurrentPlayer();\n        }\n        // debugger\n    }\n\n    findKing(inputColor){\n        const king = (inputColor === 'white' ? `./assets/kw.svg` : `./assets/kb.svg`)\n        for(let i = 0; i < 8; i++){\n            for(let j = 0; j < 8; j++){\n                if (this.rows[i][j].symbol() == king && this.rows[i][j].color == inputColor ){\n                    return [i, j]\n                }\n            }\n        }\n    }\n    // Returns true if inputColor is in check.\n    check(inputColor){\n        const kingPosition = this.findKing(inputColor);\n        const oppColor = (inputColor == 'white' ? 'black' : 'white');\n        for(let i = 0; i  < 8; i++){\n            for(let j = 0; j  < 8; j++){\n                if(this.rows[i][j].color == oppColor && this.includesPosition(this.rows[i][j].moveDirections(), kingPosition )){\n                    return true\n                }\n            }\n        }\n        return false\n    }\n    // Returns true if input color is in checkmate.\n    checkmate(inputColor){\n        const kingPosition = this.findKing(inputColor)\n        const oppColor = (inputColor == 'white' ? 'black' : 'white')\n        let bool = false\n        if (this.check(inputColor)){\n            for (let i = 0; i < 8; i++) {\n                for (let j = 0; j < 8; j++) {\n                    if (this.rows[i][j].color == inputColor){\n                        // if (i === kingPosition[0] && j === kingPosition[1]){\n                        //     continue;\n                        // }\n                        let piece = this.rows[i][j];\n                        let moves = piece.moveDirections();\n                        let k = 0;\n                        while (k < moves.length){\n                            let x = moves[k][0];\n                            let y = moves[k][1];\n                            let temp = this.rows[x][y];\n                            // console.log(temp.constructor )\n                            this.rows[x][y] = piece;\n                            // continue if new position is king maybe error\n                            this.rows[i][j] = new NullPiece(\"null\", this, [i, j]);\n                            // debugger;\n                            if(!this.check(inputColor)){\n                                this.rows[i][j] = piece\n                                this.rows[x][y] = temp\n                                return false    \n                            }\n                            this.rows[i][j] = piece\n                            this.rows[x][y] = temp\n                            k +=  1\n                        }\n                    }\n                }\n            } \n        }\n        else{\n            return false\n        }\n        return true\n    }\n\n    isOnBoard(pos) {\n        if (pos[0] < 8 && pos[0] >= 0 && pos[1] < 8 && pos[1] >= 0) {\n            return true\n        }\n        return false\n    }\n\n    isValidPosition(pos, color){\n        let bool = true\n        return this.isOnBoard(pos) && this.rows[pos[0]][pos[1]].color !== color\n    }\n\n    promotion(pos, newPiece){\n        let oldPiece = this.rows[pos[0]][pos[1]];\n        // debugger;\n        this.rows[pos[0]][pos[1]] = new newPiece (oldPiece.color, this, oldPiece.position);\n    }\n    //Newmethod\n    position(pos){\n        this.rows[pos]\n    }\n\n    includesPosition(arr1, arr2) {\n        // console.log(\"includesPosition\");\n        // console.log(arr1);\n        // console.log(arr2);\n        for (let i = 0; i < arr1.length; i++) {\n            // console.log(arr1[i]);\n            if (this.areEqualArrays(arr1[i], arr2)) {\n                return true\n            }\n        }\n        return false;\n    }\n\n    areEqualArrays(arr1, arr2) {\n        let  count = arr2.length;\n        for (let i = 0; i < arr1.length; i++) {\n            if (arr1[i] == arr2[i]) {\n                count -= 1;\n            }\n        }\n        if (count === 0) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n\n    changeCurrentPlayer(){\n        this.currentPlayer = (this.currentPlayer === \"white\" ? \"black\" : \"white\")\n    }\n\n}\n\nexport default Board;","// create index.js in /src directory and import style /src / styles / index.scss\nimport './styles/index.scss';\n// import Game from './scripts/board';\nimport Board from './scripts/board';\nimport Queen from './scripts/piece/Queen';\nimport Pawn from './scripts/piece/pawn';\n// this.game = new Game;\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>{\n    updateBoard();\n    reset();\n});\n\nlet clickCount = [];\nlet board2 = new Board();\nfunction updateBoard(){\n    let chessBoard = document.getElementsByClassName(\"chess\")[0];\n    let valid = document.getElementsByClassName(\"valid\")[0];\n    updateMessages();    \n    // debugger\n    for(let i = 0; i < 8; i++){\n        for(let j = 0; j < 8; j++){\n            //create  tile element for \n            let img = document.createElement(\"img\");   \n            img.className = ((i + j) % 2 === 0 ? \"black\" : \"white\" );\n            img.id = `${i}${j}`;\n            img.src = board2.rows[i][j].symbol();\n            chessBoard.appendChild(img);\n            img.onclick = function (e) {\n                e.preventDefault;\n                const startPos = [i, j];\n                if (clickCount.length === 0 && board2.rows[startPos[0]][startPos[1]].color === board2.currentPlayer){\n                    clickCount.push(startPos);\n                    valid.textContent = `Pick where to move ${board2.currentPlayer} piece`;\n                    // console.log('being pushed');\n                }\n                else if (clickCount.length === 0){\n                    // console.log('wrong color');\n                    valid.textContent = `Pick ${board2.currentPlayer} piece to move.`;\n                }\n                else {\n                    board2.movePiece(clickCount[0], startPos);\n                    valid.textContent = `Pick ${board2.currentPlayer} piece to move.`;\n                    let currentPiece = board2.rows[startPos[0]][startPos[1]];\n                    if (currentPiece instanceof Pawn && (startPos[0] === 0 || startPos[0] === 7)){\n                        currentPiece = board2.promotion(startPos, Queen);\n                    }\n                    // console.log(\"White is in check: \", board2.checkmate('white'));\n                    clickCount = [];\n                    chessBoard.innerHTML = \"\";\n                    updateBoard();\n                }\n            }\n               \n        }\n    };\n    \n    \n};\n\nfunction reset(){\n    document.getElementsByClassName('reset')[0].addEventListener('click', () => {\n        board2 = new Board;\n        clickCount = [];\n        document.getElementsByClassName(\"chess\")[0].innerHTML = \"\";\n        updateBoard();\n    });\n}\n\n\nfunction updateMessages(){\n    let isCheck = document.getElementsByClassName(\"check\")[0]; \n    let turn = document.getElementsByClassName(\"turn\")[0];\n    turn.textContent = board2.currentPlayer[0].toUpperCase() + board2.currentPlayer.slice(1) + \"'s Turn\"\n    if (board2.checkmate('white')){\n        isCheck.textContent = `White is in checkmate!`;\n        turn.textContent = '';\n    }\n    else if (board2.checkmate('black')){\n        isCheck.textContent = 'Black is in checkmate!';\n        turn.textContent = '';\n    }\n    else if (board2.check('white')){\n        isCheck.textContent = 'White is in check!';\n    }\n    else if (board2.check('black')){\n        isCheck.textContent = 'Black is in check!';\n    }\n    else {\n        isCheck.textContent = '';\n    }\n}\n\n// import Board from './scripts/board';\n// instance of  board\n// const a = new Board;\n// console.log(a);\n\n// new Game\n// node file. "],"sourceRoot":""}