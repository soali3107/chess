{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/piece/piece.js","webpack:///./src/scripts/piece/stepable.js","webpack:///./src/scripts/piece/king.js","webpack:///./src/scripts/piece/knight.js","webpack:///./src/scripts/piece/slideable.js","webpack:///./src/scripts/piece/Queen.js","webpack:///./src/scripts/piece/rook.js","webpack:///./src/scripts/piece/bishop.js","webpack:///./src/scripts/piece/nullpiece.js","webpack:///./src/scripts/piece/pawn.js","webpack:///./src/scripts/board.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Piece","color","board","position","this","status","movePosition","pos","end_pos","allMoves","moves","possibleMoves","length","potentialMoves","newPosition","isValidPosition","push","King","moveDirections","Knight","AxialDirections","DiagonalDirections","directionalArray","combine","growingMoves","dx","dy","oneDirectionalMoves","console","log","takingPiece","currentPosition","rows","arr1","arr2","freeze","Queen","concat","Rook","Bishop","symbol","NullPiece","Pawn","direction","atStart","forwardDirections","forwardSteps","sideSteps","diagonalMoves","forward","oneStep","twoStep","steps","isEmpty","oppositeColor","coord","Board","currentPlayer","j","populateBoard","movePiece","includesPosition","changeCurrentPlayer","chessPiece","backRow","index","startPos","endPos","piece","bool","areEqualArrays","count","document","addEventListener","setUpBoard","chessBoard","getElementsByClassName","img","createElement","className","id","src","board2","appendChild","onclick","e","preventDefault","clickCount","innerHTML"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,SAIjBlC,EAAoBA,EAAoBmC,EAAI,G,uPC3DtCC,E,WAtBX,WAAYC,EAAOC,EAAOC,I,4FAAS,SAC/BC,KAAKH,MAAOA,EACZG,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,EAChBC,KAAKC,QAAS,EAEdD,KAAKE,aAAeF,KAAKE,aAAad,KAAKY,M,4DAGlCG,GACTH,KAAKD,SAAW,CAACI,EAAI,GAAIA,EAAI,M,6EAOhBC,S,gCChBd,SAASC,EAASC,EAAOP,EAAUD,GAEtC,IADA,IAAMS,EAAgB,GACd3C,EAAI,EAAGA,EAAI0C,EAAME,OAAQ5C,IAAI,CACjC,IAAI6C,EAAiBH,EAAM1C,GACvB8C,EAAc,CAACX,EAAS,GAAKU,EAAe,GAAIV,EAAS,GAAKU,EAAe,IAC9EX,EAAMa,gBAAgBD,IACrBH,EAAcK,KAAKF,GAG3B,OAAOH,E,uuBCWIM,E,YAlBX,WAAYhB,EAAOC,EAAOC,GAAU,M,IAAA,O,4FAAA,S,EAChC,U,EAAA,eAAMF,EAAOC,EAAOC,K,8CACfE,QAAS,EACd,EAAKa,eAAiB,EAAKA,eAAe1B,KAApB,MAHU,E,gSAQhC,MAAuB,UAAfY,KAAKH,MAAL,sC,uCAMR,OAAOQ,EAFO,CAAC,CAAC,EAAE,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,GAC1B,EAAE,EAAG,GAAI,EAAE,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IAC3BL,KAAKD,SAAUC,KAAKF,Y,8BAfhCF,G,uuBCmBJmB,E,YAlBX,WAAYlB,EAAOC,EAAOC,GAAU,M,IAAA,O,4FAAA,S,EAChC,U,EAAA,eAAMF,EAAOC,EAAOC,K,8CACfE,QAAS,EACd,EAAKa,eAAiB,EAAKA,eAAe1B,KAApB,MAHU,E,gSAQhC,MAAuB,UAAfY,KAAKH,MAAL,sC,uCAMR,OAAOQ,EAFO,CAAE,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAC9B,EAAE,EAAG,GAAI,EAAE,EAAG,GAAI,EAAE,GAAI,GAAI,EAAE,GAAI,IAC3BL,KAAKD,SAAUC,KAAKF,Y,8BAf9BF,GCDRoB,EAAkB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,GAAI,IACjDC,EAAqB,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,EAAE,GAAI,GAAI,EAAE,EAAG,IAI5D,SAASX,EAAMY,EAAkBnB,EAAUD,GAO9C,IANA,IAAIO,EAAW,GAMNzC,EAAI,EAAGA,EAAIsD,EAAiBV,OAAQ5C,IAGzCyC,EAAWc,EAAQd,EAAUe,EAAaF,EAAiBtD,GAAG,GAAIsD,EAAiBtD,GAAG,GAAImC,EAAUD,IAIxG,OAAOO,EAGJ,SAASe,EAAaC,EAAIC,EAAIvB,EAAUD,GAC3C,IAAMyB,EAAsB,GAC5BC,QAAQC,IAAI,QAEZ,IAAIC,GAAc,EACdC,EAAkB5B,EAKtB,IAHA4B,EAAmB,CAACA,EAAgB,GAAKN,EAAIM,EAAgB,GAAKL,GAG3DxB,EAAMa,gBAAgBgB,KAIwC,UAA7D7B,EAAM8B,KAAKD,EAAgB,IAAIA,EAAgB,IAAI9B,OAAkF,UAA7DC,EAAM8B,KAAKD,EAAgB,IAAIA,EAAgB,IAAI9B,QAC3H6B,GAAc,GAElBH,EAAoBX,KAAKe,GACzBA,EAAkB,CAACA,EAAgB,GAAKN,EAAIM,EAAgB,GAAKL,IAC7DI,KAMR,OAAOH,EAGX,SAASJ,EAAQU,EAAMC,GACnB,IAAI,IAAKlE,EAAI,EAAGA,EAAIkE,EAAKtB,OAAQ5C,IAC7BiE,EAAKjB,KAAKkB,EAAKlE,IAEnB,OAAOiE,E,muBApDXvD,OAAOyD,OAAOf,GACd1C,OAAOyD,OAAOd,G,ICiBCe,E,YAlBX,WAAYnC,EAAOC,EAAOC,GAAU,M,IAAA,O,4FAAA,S,EAChC,U,EAAA,eAAMF,EAAOC,EAAOC,K,8CACfE,QAAS,EAEd,EAAKa,eAAiB,EAAKA,eAAe1B,KAApB,MAJU,E,gSAShC,MAAuB,UAAfY,KAAKH,MAAL,sC,uCAKR,OAAOS,EAAMU,EAAgBiB,OAAOhB,GAAqBjB,KAAKD,SAAUC,KAAKF,Y,8BAfjEF,G,2yBCeLsC,E,YAdX,WAAYrC,EAAOC,EAAOC,GAAS,a,4FAAA,UAC/B,wBAAMF,EAAOC,EAAOC,KACfE,QAAS,EAFiB,E,gSAM/B,MAAuB,UAAfD,KAAKH,MAAL,sC,uCAIR,OAAOS,EAAMU,EAAiBhB,KAAKD,SAAUC,KAAKF,Y,8BAXvCF,G,uuBCuBJuC,E,YArBX,WAAYtC,EAAOC,EAAOC,GAAU,M,IAAA,O,4FAAA,S,EAChC,U,EAAA,eAAMF,EAAOC,EAAOC,K,8CACfE,QAAS,EACd,EAAKmC,OAAS,EAAKA,OAAOhD,KAAZ,MACd,EAAK0B,eAAgB,EAAKA,eAAe1B,KAApB,MACrB,EAAKkB,MAAQA,EAAMlB,KAAN,MALmB,E,gSAYhC,MAAuB,UAAfY,KAAKH,MAAL,sC,uCAKR,OAAOS,EAAMW,EAAoBjB,KAAKD,SAAUC,KAAKF,Y,8BAlBxCF,G,2yBCFfyC,E,YACF,WAAYxC,EAAOC,EAAOC,GAAS,a,4FAAA,UAC/B,wBAAMF,EAAOC,EAAOC,KAKfO,MAAS,GANiB,E,gSAS/B,6B,uCAGA,MAAO,Q,8BAbSV,GAkBxBtB,OAAOyD,OAAOM,GACCA,Q,uuBCwFAC,E,YA1GX,WAAYzC,EAAOC,EAAOC,GAAU,M,IAAA,O,4FAAA,S,EAChC,U,EAAA,eAAMF,EAAOC,EAAOC,K,8CACfE,QAAS,EAEd,EAAKa,eAAiB,EAAKA,eAAe1B,KAApB,MACtB,EAAKmD,UAAY,EAAKA,UAAUnD,KAAf,MACjB,EAAKoD,QAAW,EAAKA,QAAQpD,KAAb,MAChB,EAAKiB,SAAW,EAAKA,SAASjB,KAAd,MAEhB,EAAKqD,kBAAoB,EAAKA,kBAAkBrD,KAAvB,MACzB,EAAKsD,aAAe,EAAKA,aAAatD,KAAlB,MACpB,EAAKuD,UAAY,EAAKA,UAAUvD,KAAf,MAXe,E,gSAgBhC,MAAuB,UAAfY,KAAKH,MAAL,sC,uCAWR,IAAIQ,EAAW,GACXL,KAAKyC,oBAAoBjC,OAAS,IAElCH,EAASO,KAAKZ,KAAKyC,qBACfpC,EAASG,OAAS,GAAKR,KAAKwC,WAC5BnC,EAASO,KAAK,CAACZ,KAAKuC,YAAcvC,KAAKyC,oBAAoB,GAAIzC,KAAKyC,oBAAoB,MAKhG,IADA,IAAIG,EAAgB5C,KAAK2C,YACjB/E,EAAI,EAAGA,EAAIgF,EAAcpC,OAAQ5C,IACrCyC,EAASO,KAAKgC,EAAchF,IAEhC,OAAOyC,I,kCAUP,MAAsB,UAAfL,KAAKH,OAAqB,EAAI,I,gCAIrC,OAAwB,UAAfG,KAAKH,MAAoB,EAAI,KAASG,KAAKD,SAAS,K,8EAU7D,IAAI8C,EAAU,CAAC7C,KAAKuC,YAAcvC,KAAKD,SAAS,GAAIC,KAAKD,SAAS,IAClE,MAAsD,SAAlDC,KAAKF,MAAM8B,KAAKiB,EAAQ,IAAIA,EAAQ,IAAIhD,MACjCgD,EAGA,K,qCAKX,IAAIC,EAAU,CAAC9C,KAAKD,SAAS,GAAIC,KAAKD,SAAS,GAAKC,KAAKyC,qBACrDM,EAAU,CAAC/C,KAAKD,SAAS,GAAK,EAAIC,KAAKyC,oBAAqBzC,KAAKD,SAAS,IAC1EiD,EAAQ,GAOZ,OANGhD,KAAKF,MAAMa,gBAAgBmC,IAAY9C,KAAKF,MAAMmD,QAAQH,KACzDE,EAAMpC,KAAKkC,GACR9C,KAAKF,MAAMa,gBAAgBoC,IAAY/C,KAAKF,MAAMmD,QAAQF,IAAY/C,KAAKwC,WAC1EQ,EAAMpC,KAAKmC,IAGZC,I,kCAWP,IANA,IAAIE,EAAgC,UAAflD,KAAKH,MAAqB,QAAW,QACtDgD,EAAU,CAAC7C,KAAKuC,YAAcvC,KAAKD,SAAS,GAAIC,KAAKD,SAAS,IAC9DiD,EAAQ,GAEP1C,EAAS,CAAC,CAAEuC,EAAQ,GAAKA,EAAQ,GAAK,GAAI,CAACA,EAAQ,GAAKA,EAAQ,GAAK,IAElEjF,EAAI,EAAGA,EAAI0C,EAAME,OAAQ5C,IAAI,CACjC,IAAIuF,EAAQ7C,EAAM1C,GACfoC,KAAKF,MAAM8B,KAAKuB,EAAM,IAAIA,EAAM,IAAItD,QAAUqD,GAC7CF,EAAMpC,KAAKuC,GAGnB,OAAOH,O,8BArGIpD,G,gLCgJJwD,G,WAlIX,c,4FAAa,SACTpD,KAAK4B,KAAO,GACZ5B,KAAKqD,cAAgB,QAErB,IAAK,IAAIzF,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACvBoC,KAAK4B,KAAKhE,GAAK,GACf,IAAK,IAAI0F,EAAI,EAAIA,EAAK,EAAGA,IACrBtD,KAAK4B,KAAKhE,GAAG0F,GAAK,IAAIjB,EAAU,OAAQrC,KAAM,CAACpC,EAAG0F,IAK1DtD,KAAKuD,cAAgBvD,KAAKuD,cAAcnE,KAAKY,MAC7CA,KAAKiD,QAAUjD,KAAKiD,QAAQ7D,KAAKY,MACjCA,KAAKwD,UAAaxD,KAAKwD,UAAUpE,KAAKY,MACtCA,KAAKW,gBAAiBX,KAAKW,gBAAgBvB,KAAKY,MAChDA,KAAKD,SAAWC,KAAKD,SAASX,KAAKY,MACnCA,KAAKyD,iBAAmBzD,KAAKyD,iBAAiBrE,KAAKY,MACnDA,KAAK0D,oBAAsB1D,KAAK0D,oBAAoBtE,KAAKY,MACzDA,KAAKuD,gB,+DAKL,IADA,IAAM1D,EAAS,CAAC,QAAS,SAChBjC,EAAK,EAAGA,EAAIoC,KAAK4B,KAAKpB,OAAQ5C,IACnC,IAAI,IAAI0F,EAAI,EAAGA,EAAItD,KAAK4B,KAAKhE,GAAG4C,OAAQ8C,IAAI,CACxC,IAAIvD,EAAY,CAACnC,EAAG0F,GACpB,GAAW,IAAP1F,GAAkB,IAANA,EAAQ,CAEpB,IAAM+F,EAAa3D,KAAK4D,QAAQN,GAChCtD,KAAK4B,KAAK7B,EAAS,IAAIA,EAAS,IAAM,IAAI4D,EAAW9D,EAAMjC,EAAI,GAAIoC,KAAMD,QAG9D,IAANnC,GAAiB,IAANA,IAChBoC,KAAK4B,KAAK7B,EAAS,IAAIA,EAAS,IAAM,IAAIuC,EAAKzC,GAAOjC,EAAI,GAAK,GAAIoC,KAAMD,O,8BAMjF8D,GAEJ,MADkB,CAAC3B,EAAMnB,EAAQoB,EAAQH,EAAOnB,EAAMsB,EAAQpB,EAAQmB,GACpD2B,K,8BAGd1D,GACJ,OAAOH,KAAKW,iBAAwD,SAArCX,KAAK4B,KAAKzB,EAAI,IAAIA,EAAI,IAAIN,Q,gCAGnDiE,GAAsB,IAAZC,EAAY,uDAAH,GACzBvC,QAAQC,IAAI,aAIZ,IAAIuC,EAAQhE,KAAK4B,KAAKkC,EAAS,IAAIA,EAAS,IAWxCE,EAAMnE,QAAUG,KAAKqD,eAAkBrD,KAAKyD,iBAAiBO,EAAMlD,iBAAkBiD,KAErF/D,KAAK4B,KAAKmC,EAAO,IAAIA,EAAO,IAAMC,EAClChE,KAAK4B,KAAKkC,EAAS,IAAIA,EAAS,IAAM,IAAIzB,EAAU,OAAQrC,KAAM8D,GAClE9D,KAAK0D,sBAEL1D,KAAK4B,KAAKmC,EAAO,IAAIA,EAAO,IAAI7D,aAAa6D,M,sCAKrC5D,GAEZ,IADA,IAAI8D,GAAO,EACHrG,EAAI,EAAGA,EAAIuC,EAAIK,OAAS5C,KAExBuC,EAAIvC,GAAM,GAAOuC,EAAIvC,GAAM,KAC3BqG,GAAO,GAIf,OAAOA,GAAQjE,KAAK4B,KAAKzB,EAAI,IAAIA,EAAI,IAAIN,QAAUG,KAAKqD,gB,+BAInDlD,GACLH,KAAK4B,KAAKzB,K,uCAGG0B,EAAMC,GAInB,IAAK,IAAIlE,EAAI,EAAGA,EAAIiE,EAAKrB,OAAQ5C,IAE7B,GADA4D,QAAQC,IAAII,EAAKjE,IACboC,KAAKkE,eAAerC,EAAKjE,GAAIkE,GAC7B,OAAO,EAGf,OAAO,I,qCAGID,EAAMC,GAEjB,IADA,IAAKqC,EAAQrC,EAAKtB,OACT5C,EAAI,EAAGA,EAAIiE,EAAKrB,OAAQ5C,IACzBiE,EAAKjE,IAAMkE,EAAKlE,KAChBuG,GAAS,GAGjB,OAAc,IAAVA,I,4CASJnE,KAAKqD,cAAwC,UAAvBrD,KAAKqD,cAA4B,QAAU,U,0ECrIzEe,SAASC,iBAAiB,oBAI1B,SAASC,IAEL,IAAIC,EAAaH,SAASI,uBAAuB,SAAS,GAFzC,eAIT5G,GACJ,IALa,eAKL0F,GAEJ,IAAImB,EAAML,SAASM,cAAc,OAGjCD,EAAIE,WAAc/G,EAAI0F,GAAK,GAAM,EAAI,QAAU,QAC/CmB,EAAIG,GAAJ,UAAYhH,GAAZ,OAAgB0F,GAKhBmB,EAAII,IAAMC,GAAOlD,KAAKhE,GAAG0F,GAAGlB,SAS5BmC,EAAWQ,YAAYN,GACvBA,EAAIO,QAAU,SAAUC,GACpBA,EAAEC,eACF,IAAMpB,EAAW,CAAClG,EAAG0F,GACK,IAAtB6B,GAAW3E,OACX2E,GAAWvE,KAAKkD,IAKhBtC,QAAQC,IAAI,SACZD,QAAQC,IAAI0D,GAAW,IACvB3D,QAAQC,IAAIqC,GACZgB,GAAOtB,UAAU2B,GAAW,GAAIrB,GAChCqB,GAAa,GAIbZ,EAAWa,UAAY,GACvBd,OAvCJhB,EAAI,EAAGA,EAAI,EAAGA,IAAI,EAAlBA,IADZ,IAAI,IAAI1F,EAAI,EAAGA,EAAI,EAAGA,IAAI,EAAlBA,MAPZ,IAAIkH,GAAS,IAAI1B,GAEb+B,GAAa","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","class Piece {\n    constructor(color, board, position){\n        this.color =color;\n        this.board = board;\n        this.position = position;\n        this.status = false;\n\n        this.movePosition = this.movePosition.bind(this);\n    }\n\n    movePosition(pos){\n        this.position = [pos[0], pos[1]];\n    }\n\n    validMoves(){\n        //takes out moves  if it moves into check\n    }\n\n    isMovedIntoCheck(end_pos){\n        //boolean if piece is in  check if in end position\n    }\n}\n\nexport default Piece;","import Board from \"../board\";\n\nexport function allMoves(moves, position, board){\n    const possibleMoves = [];\n    for(let i = 0; i < moves.length; i++){\n        let potentialMoves = moves[i];\n        let newPosition = [position[0] + potentialMoves[0], position[1] + potentialMoves[1] ]\n        if(board.isValidPosition(newPosition)){\n            possibleMoves.push(newPosition)\n        }\n    }\n    return possibleMoves\n}","import Piece from './piece';\nimport { allMoves } from './stepable';\n\nclass King extends Piece{\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = true;\n        this.moveDirections = this.moveDirections.bind(this);\n    }\n    symbol() {\n        // return \"KING\";\n        // return `../assets/k${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/kw.svg` : `./assets/kb.svg`);\n    }\n\n    moveDirections() {\n        const moves = [[1,0], [1, 1], [0, 1], [-1, 1],\n                         [-1, 0], [-1, -1], [0, -1], [1, -1]];\n        return allMoves(moves, this.position, this.board);\n    }\n}\n\nexport default King;","import Piece from './piece';\nimport { allMoves } from './stepable';\n\nclass Knight extends Piece {\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = false;\n        this.moveDirections = this.moveDirections.bind(this);\n    }\n    symbol() {\n        // return \"KNIGHT\";\n        // return `../assets/n${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/nw.svg` : `./assets/nb.svg`);\n    }\n\n    moveDirections() {\n        const moves = [ [1, 2], [2, 1], [1, -2], [2, -1],\n                        [-1, 2], [-2, 1], [-1, -2], [-2, -1] ]\n        return allMoves(moves, this.position, this.board)\n    }\n}\n\nexport default Knight;","// let EXPORTED_VARIABLES = [\"AxialDirections\", \"DiagonalDirections\", \"moves\", \"growingMoves\"];\n\nexport const AxialDirections = [[1, 0], [0, 1], [-1, 0], [0, -1]];\nexport const DiagonalDirections = [[1, 1], [1, -1], [-1, -1], [-1, 1]];\nObject.freeze(AxialDirections);\nObject.freeze(DiagonalDirections);\n\nexport function moves(directionalArray, position, board){\n    let allMoves = [];\n    // debugger;\n    // console.log(\"moves2\");\n    // console.log(allMoves);\n    // console.log(position);\n    // console.log(board);\n    for(let  i = 0; i < directionalArray.length; i++){\n        // debugger;\n        // console.log(\"Axial Direction: \", directionalArray[i]);\n        allMoves = combine(allMoves, growingMoves(directionalArray[i][0], directionalArray[i][1], position, board)); \n        // console.log(\"newMoves\");\n        // console.log(allMoves);\n    }\n    return allMoves;\n}\n\nexport function growingMoves(dx, dy, position, board){\n    const oneDirectionalMoves = [];\n    console.log(\"Grow\");\n    // console.log(this.position);\n    let takingPiece = false;\n    let currentPosition = position;\n    // console.log(board);\n    currentPosition =  [currentPosition[0] + dx, currentPosition[1] + dy];\n    // let count = 0;\n    // debugger;\n    while( board.isValidPosition(currentPosition)){\n    // while (false){\n        // console.log(count += 1);\n        // debugger;\n        if (board.rows[currentPosition[0]][currentPosition[1]].color === \"white\" || board.rows[currentPosition[0]][currentPosition[1]].color === \"black\") {\n            takingPiece = true;\n        }\n        oneDirectionalMoves.push(currentPosition);\n        currentPosition = [currentPosition[0] + dx, currentPosition[1] + dy];\n        if (takingPiece) {\n            break;\n        }\n        // debugger;\n       \n    }\n    return oneDirectionalMoves\n}\n\nfunction combine(arr1, arr2){\n    for(let  i = 0; i < arr2.length; i++){\n        arr1.push(arr2[i]);\n    }\n    return arr1;\n}\n// export default Slideable;\n\n// import Board from \"../board\";\n// import Piece from './piece';\n\n// class Slideable extends Board{\n//     //Axial Directions: Directions of the axis (x- and y-) \n//     constructor(){\n//         // super();\n\n//         const AxialDirections = [[1,  0], [0, 1], [-1,  0], [0, -1]];\n//         const DiagonalDirections = [[1, 1], [1, -1], [-1, -1], [-1, 1]];\n//         Object.freeze(AxialDirections);\n//         Object.freeze(DiagonalDirections);\n//     }\n\n\n//     growingMoves(dx, dy){\n//         const oneDirectionalMoves = [];\n//         let currentPosition = this.position;\n//         currentPosition =  [currentPosition[0] + dx, currentPosition[1] + dy];\n//         while(super.validPosition(currentPosition)){\n        \n//             return oneDirectionalMoves\n//         }\n//     }\n// }\n","import Piece from './piece';\nimport { AxialDirections, DiagonalDirections, moves } from './slideable';\n\nclass Queen extends Piece {\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = false;\n\n        this.moveDirections = this.moveDirections.bind(this);\n\n    }\n    symbol() {\n        // return `../assets/q${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/qw.svg` : `./assets/qb.svg`);\n    }\n\n    moveDirections() {\n        // console.log(\"Axial + Diagonal\", AxialDirections.concat(DiagonalDirections)[0] );\n        return moves(AxialDirections.concat(DiagonalDirections), this.position, this.board)\n    }  \n}\n\nexport default Queen;","import Piece from './piece';\nimport { AxialDirections, moves } from './slideable';\n\nclass Rook extends Piece {\n    constructor(color, board, position){\n        super(color, board, position);\n        this.status = true;\n\n    }\n    symbol() {\n        return (this.color === 'white' ? `./assets/rw.svg` : `./assets/rb.svg`);\n    }\n\n    moveDirections(){\n        return moves(AxialDirections, this.position, this.board)\n    }\n}\n\nexport default Rook;","import Piece from './piece';\nimport { DiagonalDirections, moves } from './slideable';\n// let piece = NodeRequire './piece';\n\nclass Bishop extends Piece{\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = false;\n        this.symbol = this.symbol.bind(this);\n        this.moveDirections= this.moveDirections.bind(this);\n        this.moves = moves.bind(this);\n        // this.DiagonalDirections = DiagonalDirections.bind(this);\n\n    }\n    symbol() {\n        // return \"BISHOP\";\n        // return `../assets/b${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/bw.svg` : `./assets/bb.svg`);\n\n    }\n\n    moveDirections() {\n        return moves(DiagonalDirections, this.position, this.board)\n    }\n}\n\nexport default Bishop;","import Piece from './piece';\n\nclass NullPiece extends Piece  {\n    constructor(color, board, position){\n        super(color, board, position);\n        // this.board = board;\n        // this.position = position;\n        // this.color = \"none\";\n        // this.symbol = \"null\";\n        this.moves  = [];\n    }\n    symbol() {\n        return `./assets/empty.png`;\n    }\n    moveDirections(){\n        return []\n    }\n};\n\n//Singleton: https://www.sitepoint.com/javascript-design-patterns-singleton/\nObject.freeze(NullPiece);\nexport default NullPiece;","import Piece from './piece';\n\nclass Pawn extends Piece {\n    constructor(color, board, position) {\n        super(color, board, position);\n        this.status = false;\n\n        this.moveDirections = this.moveDirections.bind(this);\n        this.direction = this.direction.bind(this);\n        this.atStart  = this.atStart.bind(this);\n        this.allMoves = this.allMoves.bind(this);\n\n        this.forwardDirections = this.forwardDirections.bind(this);\n        this.forwardSteps = this.forwardSteps.bind(this);\n        this.sideSteps = this.sideSteps.bind(this);\n    }\n    symbol() {\n        // return \"PAWN\";\n        // return `../assets/p${this.symbol[0]}.svg`;\n        return (this.color === 'white' ? `./assets/pw.svg` : `./assets/pb.svg`);\n\n    }\n\n    moveDirections() {\n        // console.log(\"movedPawn\");\n        // console.log(this.forwardDirections())\n        // let mainMove = this.forwardDirections();\n\n        // Consists of forward moves\n            //Two Step Forward Moves\n        let allMoves = [];\n        if (this.forwardDirections().length > 0) {\n            // debugger;\n            allMoves.push(this.forwardDirections());\n            if (allMoves.length > 0 && this.atStart()) {\n                allMoves.push([this.direction() + this.forwardDirections()[0], this.forwardDirections()[1]])\n            }\n        }\n        //  Diagonal Moves.\n        let diagonalMoves = this.sideSteps();\n        for(let i = 0; i < diagonalMoves.length; i++){\n            allMoves.push(diagonalMoves[i]);\n        }\n        return allMoves;\n        // if (this.atStart()){\n        //     return [mainMove, [this.direction() + mainMove[0], mainMove[1]]]\n        // }\n        // else{\n        //     return [mainMove]\n        // }\n    }\n\n    direction() {\n        return this.color === 'white' ? -1 : 1;\n    }\n\n    atStart(){\n        return ( this.color === 'white' ? 6 : 1 ) ===  this.position[0]\n    }\n\n    allMoves(){\n        //Consists of diagonal Killing  Moves\n        //Passant\n    }\n\n    // Consists of 0-1 Steps Forward\n    forwardDirections(){\n        let forward = [this.direction() + this.position[0], this.position[1]];\n        if (this.board.rows[forward[0]][forward[1]].color === 'null'){\n            return forward;\n        }\n        else {\n            return [];\n        }\n    }\n\n    forwardSteps(){\n        let oneStep = [this.position[0], this.position[1] + this.forwardDirections()];\n        let twoStep = [this.position[0] + 2 * this.forwardDirections(), this.position[1]];\n        let steps = [];\n        if(this.board.isValidPosition(oneStep) && this.board.isEmpty(oneStep)){\n            steps.push(oneStep)\n            if(this.board.isValidPosition(twoStep) && this.board.isEmpty(twoStep) && this.atStart()){\n                steps.push(twoStep)\n            }\n        }\n        return steps\n    }\n\n\n    sideSteps(){\n        let oppositeColor = (this.color === 'white' ?  'black'  : 'white');\n        let forward = [this.direction() + this.position[0], this.position[1]];\n        let steps = [];\n\n        let  moves =  [[ forward[0],  forward[1] + 1], [forward[0] , forward[1] - 1]];\n        debugger\n        for(let i = 0; i < moves.length; i++){\n            let coord = moves[i];\n            if(this.board.rows[coord[0]][coord[1]].color === oppositeColor){\n                steps.push(coord)\n            }\n        }\n        return steps\n    }\n\n\n}\n\nexport default Pawn;","// import Piece from './piece/piece';\n\nimport King from './piece/king';\nimport Knight from './piece/knight';\n\nimport Queen from './piece/Queen';\nimport Rook from './piece/rook';\nimport Bishop from './piece/bishop';\n\nimport NullPiece from './piece/nullpiece';\nimport Pawn from './piece/pawn';\nimport Piece from './piece/piece';\n\nimport Display from './display';\n\nclass Board {\n    constructor(){\n        this.rows = [];\n        this.currentPlayer = \"white\";\n        // this.noPiece = new NullPiece(\"null\", this); \n        for (let i = 0; i < 8; i++){\n            this.rows[i] = [];\n            for (let j = 0;  j  < 8; j++){\n                this.rows[i][j] = new NullPiece(\"null\", this, [i, j]); \n            }\n        }\n        // Might need to bind \"this\"\n\n        this.populateBoard = this.populateBoard.bind(this);\n        this.isEmpty = this.isEmpty.bind(this);\n        this.movePiece  = this.movePiece.bind(this);\n        this.isValidPosition =this.isValidPosition.bind(this);\n        this.position = this.position.bind(this);\n        this.includesPosition = this.includesPosition.bind(this);\n        this.changeCurrentPlayer = this.changeCurrentPlayer.bind(this);\n        this.populateBoard();\n    }\n\n    populateBoard(){\n        const color =  [\"black\", \"white\"];\n        for(let  i  = 0; i < this.rows.length; i++){\n            for(let j = 0; j < this.rows[i].length; j++){\n                let position  = [i, j];\n                if (i  === 0 || i === 7){\n                    // this.rows [position[0]][position[1]] = new (this.backRow(j))(color[i % 2], this, position);\n                    const chessPiece = this.backRow(j);\n                    this.rows[position[0]][position[1]] = new chessPiece(color[i % 2], this, position);\n\n                }\n                else if (i === 1 || i === 6){\n                    this.rows[position[0]][position[1]] = new Pawn(color[(i + 1) % 2], this, position);\n                }\n            }\n        }\n    }\n\n    backRow(index){\n        const backPieces= [Rook, Knight, Bishop, Queen, King, Bishop, Knight, Rook];\n        return backPieces[index]\n    }\n\n    isEmpty(pos) {\n        return this.isValidPosition && this.rows[pos[0]][pos[1]].color ===  'null'\n    }\n\n    movePiece(startPos, endPos = []){\n        console.log(\"movePiece\");\n        // console.log(turnColor);\n        // console.log(startPos);\n        // console.log(endPos);\n        let piece = this.rows[startPos[0]][startPos[1]];\n        // let finalPiece = this.rows[endPos];\n        // console.log(this);\n        // console.log(this.rows[startPos[0]][startPos[1]]);\n        // console.log(this.rows[endPos[0]][endPos[1]]);\n        // console.log(piece);\n        // console.log(piece.color);\n        // console.log(this.currentPlayer);\n        // console.log(piece.moveDirections());\n        // console.log(endPos);\n        // console.log(this.includesPosition(piece.moveDirections, endPos));\n        if (piece.color === this.currentPlayer && (this.includesPosition(piece.moveDirections(), endPos))){\n            // console.log(\"HELOOOOOO\");\n            this.rows[endPos[0]][endPos[1]] = piece;\n            this.rows[startPos[0]][startPos[1]] = new NullPiece(\"null\", this, startPos); \n            this.changeCurrentPlayer();\n            // this.piece.movePosition(endPos);\n            this.rows[endPos[0]][endPos[1]].movePosition(endPos);\n            // console.log(this.currentPlayer);\n        }\n    }\n\n    isValidPosition(pos){\n        let bool = true\n        for(let i = 0; i < pos.length ; i++){\n            // debugger\n            if (pos[i] <  0 ||   pos[i] >  7 ){\n                bool = false;\n            }\n        }\n        // debugger\n        return bool && this.rows[pos[0]][pos[1]].color !== this.currentPlayer\n    }\n\n    //Newmethod\n    position(pos){\n        this.rows[pos]\n    }\n\n    includesPosition(arr1, arr2) {\n        // console.log(\"includesPosition\");\n        // console.log(arr1);\n        // console.log(arr2);\n        for (let i = 0; i < arr1.length; i++) {\n            console.log(arr1[i]);\n            if (this.areEqualArrays(arr1[i], arr2)) {\n                return true\n            }\n        }\n        return false;\n    }\n\n    areEqualArrays(arr1, arr2) {\n        let  count = arr2.length;\n        for (let i = 0; i < arr1.length; i++) {\n            if (arr1[i] == arr2[i]) {\n                count -= 1;\n            }\n        }\n        if (count === 0) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n\n    changeCurrentPlayer(){\n        this.currentPlayer = (this.currentPlayer === \"white\" ? \"black\" : \"white\")\n    }\n\n    checkMate(){\n        false\n    }\n}\n\nexport default Board;","// create index.js in /src directory and import style /src / styles / index.scss\nimport './styles/index.scss';\n// import Game from './scripts/board';\nimport Board from './scripts/board';\n// this.game = new Game;\ndocument.addEventListener(\"DOMContentLoaded\", setUpBoard);\nlet board2 = new Board;\n\nlet clickCount = [];\nfunction setUpBoard(){\n    // debugger\n    let chessBoard = document.getElementsByClassName(\"chess\")[0];\n    // debugger\n    for(let i = 0; i < 8; i++){\n        for(let j = 0; j < 8; j++){\n            //create  tile element for \n            let img = document.createElement(\"img\");   \n            // Create a <img> element\n            // img.innerHTML = \"CLICK ME\";\n            img.className = ((i + j) % 2 === 0 ? \"black\" : \"white\" );\n            img.id = `${i}${j}`;\n            // img.src = game.board.pos([i,j]);\n            // if ( i < 2 )\n            // if (i === 0) {\n            //     img.src = '../assets/bb.svg';\n            img.src = board2.rows[i][j].symbol();\n            // } else if (i > 6) {\n            //     switch (j) {\n            //         case j % 5 === 0:\n            //     }\n            // }\n            // div.img.src = './assets/bb.svg';\n            // img.onclick = \"\";\n            // debugger\n            chessBoard.appendChild(img);\n            img.onclick = function (e) {\n                e.preventDefault;\n                const startPos = [i, j];\n                if (clickCount.length === 0){\n                    clickCount.push(startPos);\n                    // console.log('click1');\n                    // console.log(clickCount);\n                }\n                else {\n                    console.log(\"start\");\n                    console.log(clickCount[0]);\n                    console.log(startPos);\n                    board2.movePiece(clickCount[0], startPos)\n                    clickCount = [];\n                    // console.log('click2')\n                    // console.log(clickCount);\n                    // chessBoard.remove();\n                    chessBoard.innerHTML = \"\";\n                    setUpBoard();\n                }\n            }\n               \n        }\n        ///<div><img onClick>\n    };\n};\n\n\n\n\n// import Board from './scripts/board';\n// instance of  board\n// const a = new Board;\n// console.log(a);\n\n// new Game\n// node file. "],"sourceRoot":""}